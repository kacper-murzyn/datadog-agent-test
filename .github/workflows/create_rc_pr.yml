name: Create RC PR

on:
  workflow_dispatch:
env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
    create_rc_pr:
        runs-on: ubuntu-latest
        outputs:
          rc_pr_created: ${{ steps.check_for_changes.outputs.rc_pr_created }}
        steps:
            - name: Checkout repository
              uses: actions/checkout@v4
              with:
                fetch-depth: 0

            - name: Install python
              uses: actions/setup-python@v4
              with:
                python-version: 3.11
                cache: "pip"

            - name: Install Python dependencies
              run: |
                python -m pip install --upgrade pip
                pip install -r requirements.txt
                pip install -r tasks/libs/requirements-github.txt

            - name: Determine the release active branch
              run: |
                echo "RELEASE_BRANCH=$(inv -e release.get-active-release-branch)" >> $GITHUB_ENV
            
            - name: Checkout release branch
              uses: actions/checkout@v4
              with:
                ref: ${{ env.RELEASE_BRANCH }}
                fetch-depth: 0
            # this won't work as release branch can be either 7.AB.x or main
            - name: Check for changes since last RC
              id: check_for_changes
              run: |
                last_rc_commit=$(git log -1 --format=%H --grep="Update release.json and Go modules")
                count=$(git rev-list --count HEAD ^"$last_rc_commit")
                echo COUNT=$count >> $GITHUB_OUTPUT
                
                if [ $count -eq '0' ]; then
                    echo "No changes since last RC. Quitting workflow."
                else
                    echo "$count new commits found since last RC. Proceeding with the workflow."
                    echo "rc_pr_created=true" >> $GITHUB_OUTPUT
                fi
                
            - name: Create RC PR
              if: ${{ steps.check_for_changes.outputs.COUNT != '0'}}
              run: |
                git config user.name "GitHub Actions"
                git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
                git fetch
                inv -e release.create-rc

    build_test_rc:
        needs: create_rc_pr
        runs-on: ubuntu-latest
        if: ${{ needs.create_rc_pr.outputs.rc_pr_created == 'true' }}
        steps:
            - name: Checkout repository
              uses: actions/checkout@v2
          
            - name: Install python
              uses: actions/setup-python@v4
              with:
                 python-version: 3.11
                 cache: "pip"
          
            - name: Install Python dependencies
              run: |
                python -m pip install --upgrade pip
                pip install -r requirements.txt
                pip install -r tasks/libs/requirements-github.txt
                            
            - name: Build RC
              run: |
                git config user.name "github-actions[bot]"
                git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
                git fetch
                inv -e release.build-rc --test-build
